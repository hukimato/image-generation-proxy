name: "Deploy to timeweb server"
on:
  push:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      unused-port: ${{ steps.find-port.outputs.unused-port }}
    steps:
      - name: "Move current version to prev folder"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /www/image-api/previous
            docker compose down 
            cd .. 
            rm -rf ./previous
            cp -r current previous
            cd previous
            cp -f .env.example .env
            echo -e "\nNGINX_PORT=8082" >> .env
            echo -e "\nVERSION=previous" >> .env
            echo -e "\nHOST_USER_ID=$(id -u ${USER})" >> .env
            echo -e "\nHOST_GROUP_ID=$(id -g ${USER})" >> .env
            docker compose up -d --build

      - name: "Deploy new version into current"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /www/image-api/current
            docker compose down 
            cd ..
            rm -rf ./current
            git clone git@github.com:hukimato/image-generation-proxy.git current
            cd current
            cp .env.example .env
            echo -e "\nNGINX_PORT=8081" >> .env
            echo -e "\nVERSION=current" >> .env
            echo -e "\nHOST_USER_ID=$(id -u ${USER})" >> .env
            echo -e "\nHOST_GROUP_ID=$(id -g ${USER})" >> .env
            docker compose up -d --build

      - name: "Run current php worker"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /www/image-api/current
            docker exec -td otus-php-current php bin/app.php
